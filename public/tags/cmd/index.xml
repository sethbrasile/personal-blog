<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cmd on byteMyCache</title>
    <link>http://localhost:1313/tags/cmd/</link>
    <description>Recent content in Cmd on byteMyCache</description>
    <generator>Hugo -- 0.126.1</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Dec 2022 15:59:56 -0600</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/cmd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Avoiding Escape Hell in Powershell</title>
      <link>http://localhost:1313/posts/avoiding-escape-hell-in-powershell/</link>
      <pubDate>Mon, 19 Dec 2022 15:59:56 -0600</pubDate>
      <guid>http://localhost:1313/posts/avoiding-escape-hell-in-powershell/</guid>
      <description>I&amp;rsquo;ve got a question for you: When working on efficiently managing consistency and security across any more than a small handful of Windows machines, how often do you end your day feeling like you&amp;rsquo;ve been dragged through the very bowels of hell?
As an IT professional working daily on writing scalable powershell code, one of the most painful parts of the job is developing code that switches context. For example, if you&amp;rsquo;re writing a powershell script that needs to be passed into a powershell session through CMD for one reason or another.</description>
    </item>
  </channel>
</rss>
